<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://fonts.googleapis.com/css?family=Roboto+Slab" rel="stylesheet">
    <title>Cuttle V2</title>
</head>
<body>
    <!-- Capture local variables for angular.js access (yes, this is hideous)-->
    <script type="text/javascript">
        var loggedIn = <%= loggedIn %>;
        var gameId = <%= game %>;
    </script>
    <div ng-app="app" class="wrappingDiv">
        <!-- Highest level controller -->
        <div id="menuController" ng-controller="menuController as menu" ng-cloak class="wrappingDiv">
            <!-- Sign Up/Login Tab Buttons -->
            <div id="buttonWrapper" class="btn-group" ng-hide="menu.tab === 'lobby'">
                <button ng-click="menu.tab='signup'" ng-hide="menu.loggedIn" class="btn btn-default" ng-class="{'activeTab': menu.tab==='signup'}" id="signupButton">Sign Up</button>
                <button ng-click="menu.tab='login'" ng-hide="menu.loggedIn" class="btn btn-default" ng-class="{'activeTab': menu.tab==='login'}">Log In</button>
                <button ng-click="menu.logOut()" ng-show="menu.loggedIn" class="btn btn-default">Log Out</button>
                <button ng-click="menu.requestGames()" ng-hide="!menu.loggedIn || menu.tab==='lobby' || menu.tab==='gameView' || (menu.tab==='rules' && menu.gameId != null)" class="btn btn-default" ng-class="{'activeTab': menu.tab === 'gamesOverview'}">Games</button>
                <button ng-click="menu.tab='gameView'" ng-show="(menu.tab==='rules' && menu.gameId != null) || menu.tab==='gameView'" class="btn btn-default" ng-class="{'activeTab': menu.tab==='gameView'}">Game</button>
                <button ng-click="menu.tab='rules'" class="btn btn-default" ng-show="menu.tab !='lobby'" ng-class="{'activeTab': menu.tab==='rules'}">Rules</button>
            </div>
            <!-- Displays either signup, or login form -->
            <div id="formWrapper">
                <!-- Sign up form -->
                <div ng-controller="signUpController as signup">
                    <form ng-if="menu.tab==='signup'" name="signupForm" novalidate ng-submit="signupForm.$valid && signup.submitSignUp()" class="container-fluid">
                        <div class="row">
                            <p class="col-xs-2 col-xs-offset-5">Sign Up</p>
                        </div>
                        <div class="row">
                            <p class="col-xs-offset-2 col-xs-2">Email</p>
                            <input ng-model="signup.email" type="text" class="col-xs-4" required>
                        </div>
                        <div class="row">
                            <p class="col-xs-offset-2 col-xs-2">Password</p>
                            <input ng-model="signup.password" type="password" class="col-xs-4" required>
                        </div>
                        <div class="row">
                            <p class="col-xs-offset-2 col-xs-2">Repeat Password</p>
                            <input ng-model="signup.repeatPassword" type="password" class="col-xs-4" required>
                        </div>
                        <div class="row">
                            <input class="btn btn-default col-xs-offset-5" type="submit"></input>
                        </div>
                    </form> <!-- End of signup form -->
                </div> <!-- End signup controller -->

                <div ng-controller="loginController as login">
                    <!-- Log in form -->
                    <form ng-show="menu.tab==='login' || menu.tab==='reLogin'" ng-submit="login.logOrRelog()" class="container-fluid">
                        <div class="row">
                            <p class="col-xs-2 col-xs-offset-5">Log In</p>
                        </div>
                        <div class="row">
                            <p class="col-xs-2 col-xs-offset-2">Email</p>
                            <input ng-model="login.email" class="col-xs-4" type="text">
                        </div>
                        <div class="row">
                            <p class="col-xs-2 col-xs-offset-2">Password</p>
                            <input ng-model="login.password" class="col-xs-4" type="password">
                        </div>
                        <div class="row">
                            <button type="submit" ng-show="menu.tab==='login'" class="btn btn-default col-xs-offset-5">Log In</button>
                            <button type="submit" ng-show="menu.tab==='reLogin'" class="btn btn-default col-xs-offset-5">Log in (again)</button>
                        </div>
                    </form> <!-- End of login form -->
                </div> <!-- End login controller -->

                <!-- Rules Page -->
                <div ng-if="menu.tab==='rules'" class="container-fluid">
                    <h1>Cuttle Rules</h1>
                    <h2>Players and Cards</h2>
                    <p>Cuttle is a 2-player card game, played with a standard 52 card deck, without jokers.</p>
                    <h2>Goal</h2>
                    <p>The goal is to be the first player to have 21 <strong>or more</strong> points. When a player has 21 or more points, the game is over.</p>
                    <h2>Setting Up</h2>
                    <p>Each player starts on one side of the game board and is dealt a hand from the deck. One player is dealt six cards; the other is dealt 5 and goes first. A <em>scrap pile</em> area is designated for destroyed cards.</p>
                    <h2>Playing</h2>
                    <p>On your turn you must make exactly one of the following <strong>legal moves</strong> below.</p>
                    <h2>Legal Moves</h2>
                    <ol>
                    <li>
                    <p><strong>Draw:</strong>
                    You may draw one card from the deck and put it in your hand. If the deck is empty, you may pass. If three consecutive turns end with a pass, the game is a draw.</p>
                    <ul>
                    <li>Click the deck to draw a card</li>
                    </ul>
                    </li>
                    <li>
                    <p><strong>Points:</strong>
                    You may play any number card, Ace-Ten for the number of points shown on the card (Ace is one point). The first player to have 21 <strong>or more</strong> points wins.</p>
                    <ul>
                    <li>To play a card for points, drag it to your <strong>Points</strong> area, on the left.</li>
                    </ul>
                    </li>
                    <li>
                    <p><strong>Scuttling:</strong>
                    You may player a number card from your hand onto a lower valued number card that your opponent has played for points; this destroys both cards. You may also scuttle a card of the same rank, if your card has the higher suit. The suit order is Clubs (weakest) &lt; Diamonds &lt; Hearts &lt; Spades (strongest).</p>
                    <ul>
                    <li>To scuttle an opponent's point card, drag a higher point card from your hand on top of it.</li>
                    </ul>
                    </li>
                    <li>
                    <p><strong>Boons:</strong>
                    Face cards and eights can be played as <strong>Boons</strong>. While on your board, Boons provide you advantages. An explanation of the different Boons can be found below.</p>
                    <ul>
                    <li>To play a Boon, drag a card from your hand into the <strong>Boons</strong> area on your right.</li>
                    </ul>
                    </li>
                    <li>
                    <p><strong>One-Offs:</strong>
                    Ace-Sevens and also Nines can be played as <strong>One-Offs</strong>. Playing a card for a One-Off effect discards (to the scrap pile) in exchange for an effect, based on the rank of the card. A list of all the effects can be found below.</p>
                    <ul>
                    <li>To play a card as a <strong>One-Off</strong>, drag it to the <strong>Scrap Pile</strong> or a valid <strong>Target</strong>, if required</li>
                    </ul>
                    </li>
                    </ol>
                    <h2>One-Offs</h2>
                    <ul>
                    <li><strong>Ace</strong>: Destroy all <strong>Point</strong> cards</li>
                    <li><strong>Two</strong>: One of two effects:
                    <ol>
                    <li>Destroy <strong>target Boon</strong></li>
                    <li>Counter <strong>target One-Off</strong> (play this when an opponent plays a <strong>One-Off</strong> effect to stop it from happening)</li>
                    </ol>
                    </li>
                    <li><strong>Three</strong>: Choose one card from the <strong>Scrap Pile</strong> and put it in your hand.</li>
                    <li><strong>Four</strong>: Your opponent discards two cards of her choice from her hand to the <strong>Scrap Pile</strong></li>
                    <li><strong>Five</strong>: Draw two cards from the <strong>Deck</strong>.</li>
                    <li><strong>Six</strong>: Destroy all <strong>Boons</strong></li>
                    <li><strong>Seven</strong>: Reveal the top two cards from the <strong>Deck</strong> and choose one of them to play immediately. Play this card however you would like. The other card is placed back on top of the deck.</li>
                    <li><strong>Nine</strong>: Return an opponent's card on the board to their hand. It can't be played next turn.</li>
                    </ul>
                    <h2>Boons</h2>
                    <ul>
                    <li><strong>Eight</strong>: While you control an Eight as a <strong>Boon</strong> (called a <strong>"Glasses Eight"</strong>), your opponent plays with her hand revealed to you.</li>
                    <li><strong>Jack</strong>: Play a jack on top of a <strong>Point Card</strong> to move it to your side of the board. You keep control of the point card as long as you control the top jack.</li>
                    <li><strong>Queen</strong>: While you control a Queen, your other cards cannot be <strong>targeted</strong> by your opponent's cards.</li>
                    <li><strong>King</strong>: While you have a King, the minimum points needed to win is reduced. Each additional King further reduces the limit.
                    <ul>
                    <li>1 King: 14 points to win</li>
                    <li>2 Kings: 10 points to win</li>
                    <li>3 Kings: 7 points to win</li>
                    <li>4 Kings: 5 points to win</li>
                    </ul>
                    </li>
                    </ul>
                    <h2>FAQ</h2>
                    <h3>Can I play a two to counter a point card? What about a scuttle? Can I play a two to destroy my opponent's Boon on her turn?</h3>
                    <p>Nope! Twos can only counter One-Offs. You can play a two to destroy a Boon, but this takes your turn, unlike countering.</p>
                    <h3>Do Queens protect against countering with a two?</h3>
                    <p>Yes! Queens protect against <strong>targeting</strong>, when a card applies a unique effect to one specific card. This means your other cards (not the Queen, herself) are protected against Twos (either effect), Nines, and Jacks.</p>
                    <h3>Can I counter a Two with a Two?</h3>
                    <p>Heck yeah! Playing a Two to counter is a <strong>One-Off</strong>, which can be <strong>countered</strong> with a two. Stacked counters make for exciting plays.</p>
                    <h3>Can I win by playing a King?</h3>
                    <p>Yes. If you meet the required number of points, you win immediately. This means if you play a King when you already have enough points to meet the new limit, you win on that turn.</p>
                    <h3>If I play an Ace or a Six, are my cards destroyed as well?</h3>
                    <p>Yes. Aces and Sixes destroy all <strong>Point Cards</strong> and all <strong>Boons</strong>, respectively. That includes any that you have out. Try to avoid destroying many of your own cards!</p>
                    <h3>Where can I play Cuttle?</h3>
                    <p>You can play Cuttle anywhere you have a deck of cards and a friend! If you want to play online, this is the only place! We hope you enjoy our passion project :)</p>

                </div> <!-- End of Rules page -->

                <div ng-controller="gamesOverviewController as gamesOverview" id="gamesOverview">
                    <div ng-show="menu.tab==='gamesOverview'" class="table table-striped">
                        <form ng-submit="gamesOverview.createGame()">
                            <h1>Game Name</h1>
                            <input ng-model="gamesOverview.gameName" type="text" placeholder="Create Game">
                            <input type="submit" class="btn btn-default">
                        </form>
                        <table id="gamesTable">
                            <tr>
                                <th>#</th>
                                <th>Name</th>
                                <th>Open</th>
                                <th>Join</th>
                            </tr>
                                <tr class="newGame" ng-repeat="game in menu.games track by $index">
                                    <td>{{$index}}</td>
                                    <td id="gameName">{{game.name}}</td>
                                    <td>{{game.status}}</td>
                                    <td>
                                        <button ng-if="game.status===true" class="btn btn-default" ng-click="gamesOverview.joinGame($index)">Join</button >
                                        <button ng-if="game.status===false" class="btn btn-default" disabled="disabled">Full</button>
                                    </td>
                                </tr>
                        </table>
                    </div>
                </div>


            </div> <!-- End of formWrapper -->
            <div ng-controller="lobbyController as lobby" class="lobbyController" ng-show="menu.tab==='lobby'">
                <div ng-class="{'ready': menu.playerReady}" class="readyClass">    
                <div class="rulesDiv">
<!--                 </div>
                <div ng-show="menu.tab==='lobby'">  -->
                        <p class="readyLine">
                            Welcome to the lobby of (Game name here possibly).  {{!menu.playerReady && "When you are ready, hit the Ready button." || "If you are no longer ready, hit the Unready button."}}
                            To leave the game, click Leave Lobby. 
                            <br> If you are having issues with the screen resolution, press CTRL (Windows) or CMD (Mac) +/- to adjust to a good size.
                        </p>
                        <div id="lobbyButtons">
                            <button ng-click="lobby.ready()" ng-class="{'btn btn-success': !menu.playerReady, 'btn btn-warning': menu.playerReady}">{{menu.playerReady && "Unready" || "Ready"}}</button>
                             <button ng-click="lobby.leave()" class="btn btn-danger">Leave Lobby</button>  
                        </div>
                        <p ng-if="menu.playerReady" class="readySign">Congratulations on being ready!</p>
                        <p ng-if="menu.opReady" class="opReadySign">Your Challenger Is Waiting</p>
                        <!-- <h2>One Offs</h2\>
                        <div ng-init="checked\ = false">
                            <label\>
                                <i\nput type="checkbox" ng-model="checked">
                                Ac\e Rules
                            </labe\l>
                            <div c\lass="sample-show-hide" ng-show="\checked">
                                <d\iv>
                                  \  <div>
                                  \      <img class="lobbyCard move" ng-\class="{'movedLobbyCard': !cardCheck, \'lobbyCard': cardCheck}" \src='/images/cards/card_0_9.png'>
                                  \  </div>
                                  \  <img class="aceLobby" \src="/images/cards/ace_of_spades2.png" ng-click="cardCheck = !cardCheck" ng-model="cardCheck">
                                    Click on the ace to destroy all point cards on the field
                                    <div class="sample-show-hide" ng-show="cardCheck">
                                        <img class="lobbyCard" src='/images/cards/card_2_7.png'>
                                        <img class="lobbyCard" src='/images/cards/card_2_4.png'>
                                    </div>
                                </div>
                            </div>
                            <label>
                                <input type="checkbox" ng-model="rulesChecked">
                                All rules
                            </label>
                            <div class="rulesText" ng-show="rulesChecked">
                            </div>
                        </div>
                        <h2>Scuttling</h2> -->
      <!--               <img src="images/Cuttle_Rules-page-001.jpg" width="60%" height="100%" class="rules1"/>
                    <img src="images/Cuttle_Rules-page-002.jpg" width="60%" height="100%" class="rules2"/>
                    <img src="images/Cuttle_Rules-page-003.jpg" width="60%" height="100%" class="rules3"/> -->
                    </div> <!-- End of lobby contorller -->
                </div>
            </div> <!-- End of ng-show for lobby-->

            <!-- Game View -->
            <div ng-controller="gamesController as gc" class="container-fluid gameDiv" ng-show="menu.tab==='gameView'" ng-click="gc.disableCardView()">
                <div class="gameDiv">
                    <div id="bg">
                        <!-- TEST DRAW ACTION -->
                        <!-- Top Wrap -->
                        <div id = "topWrap" class = "row">
                            <div id="oppHand">
                                <!-- Opponent's hand CARDBACKS -->
                                <div ng-repeat="card in gc.opponent.hand" ng-if="!gc.glasses" class="opHandCard">
                                    <img src="images/finalCardback.png" class="opHandCardImg" draggable="false">
                                </div>
                                <!-- Oponent's hand REVEALED -->
                                <div ng-repeat="card in gc.opponent.hand" ng-if="gc.glasses" class="opHandCard">
                                    <img ng-src="{{card.img}}" ng-click="gc.clickCard(card, $event)" class="opHandCardImg" draggable="false">
                                </div>
                            </div>
                            </p>
                            <div id="oppCounter">
                                <div id="oppName">{{gc.opponent.email}}</div>
                                <div id="oppKingSlot1" class="kingSlot" ng-class="{fullKing: gc.opKingCount == 1}">
                                    <p class="cap1">14</p>
                                </div>
                                <div id="oppKingSlot2" class="kingSlot" ng-class="{fullKing: gc.opKingCount == 2}">
                                    <p class="cap2">10</p>
                                </div>
                                <div>
                                    <div id="oppKingSlot0" class="pointTotal" ng-class="{fullKing: gc.opKingCount == 0}">
                                        <div>
                                            21
                                        </div>
                                    </div>
                                </div>
                                <div>
                                    <div id="oppKingSlot3" class="kingSlot" ng-class="{fullKing: gc.opKingCount == 3}">
                                        <p class="cap3">7</p>
                                    </div>
                                    <div id="oppKingSlot4" class="kingSlot" ng-class="{fullKing: gc.opKingCount == 4}">
                                        <p class="cap4">5</p>
                                    </div>
                                </div>
                                <p id="oppPointTotal">Opponent Point Total: {{gc.opPointCount}}</p>
                            </div>
                        </div> <!-- End of topWrap -->
                        <!-- Middle Wrap -->
                        <div id="midWrap" class="row">
                            <div class="col-xs-2 col-md-2" id="deckScrap">
                                <!-- Deck and Scrap -->
                                <div id="deck-wrapper">
                                    <img src="images/deck.jpg" id="deck" ng-click="gc.draw()" ng-show="gc.cardsInDeck > 0" draggable="false"></img>
                                    <p id="deck-count">{{gc.cardsInDeck}} Cards</p>
                                </div>
                                <img src="images/pass.jpg" id="deck" ng-click="gc.pass()" ng-show="gc.cardsInDeck === 0" draggable="false">
                                <div id="scrap-wrapper">
                                    <img src="images/scrap.jpg" id="scrap" ts-droppable allow-drop="gc.dragoverScrap" index="0" upon-drop="gc.dropScrap" draggable="false" ng-class="{'legalMove': gc.legalMoves.indexOf('scrap') > -1 && gc.yourTurn}"></img>
                                    <p id="scrap-count">{{gc.game.scrap.length}} Cards</p>
                                </div>
                                <p class="yourTurn" ng-if="gc.yourTurn">
                                    Your Turn
                                </p>
                                <p class="oppTurn" ng-if="!gc.yourTurn">
                                    Opponent's Turn
                                </p>
                            </div>
                            <div class="col-xs-4 col-md-4 field row" id='points'>
                                <div id="oppPoints">
                                    <p class="areaLabel" ng-show="gc.opponent.points.length < 2">Points</p>
                                    <div ng-repeat="card in gc.opponent.points" class="pointCard">
                                        <img ng-src="{{card.img}}" class="pointCardImg" ts-droppable allow-drop="gc.dragoverOpPoint" upon-drop="gc.dropOpPoint" index="$index" draggable="false" ng-click="gc.clickCard(card, $event)" ng-class="{'legalMove': (gc.legalMoves.indexOf(card.id) > -1 || gc.legalMoves.indexOf('allPoints') > -1) && gc.yourTurn}">
                                        <div ng-repeat="jack in card.attachments" class="jackCard">
                                            <img ng-src="{{jack.img}}" ng-click="gc.clickCard(jack, $event)"  id="oppJackCardImg" draggable="false" ts-droppable allow-drop="gc.dragoverOpJack" upon-drop="gc.dropOpJack" index="gc.opponent.points.indexOf(card)" ng-class="{'legalMove': gc.legalMoves.indexOf('allRunes') > -1 && card.attachments.indexOf(jack) === card.attachments.length - 1}">
                                        </div>
                                    </div>
                                </div>

                                <div id="yourPoints" ts-droppable allow-drop="gc.dragoverPoints" index="0" upon-drop="gc.dropPoints" ng-class="{'legalMove': gc.legalMoves.indexOf('points') > -1 && gc.yourTurn}">
                                    <p class="areaLabel" ng-show="gc.player.points.length < 2">Points</p>
                                    <div ng-repeat="card in gc.player.points" class="pointCard">
                                        <img ng-src="{{card.img}}" ng-click="gc.clickCard(card, $event)" class="pointCardImg" draggable="false">
                                        <div ng-repeat="jack in card.attachments" class="jackCard">
                                            <img ng-src="{{jack.img}}" ng-click="gc.clickCard(jack, $event)" id="jackCardImg">
                                        </div>
                                    </div>
<!--                                     <div ng-repeat="jack in gc.player.points.attachments" class="jackCard">
                                        <img ng-src="{{jack.img}}" class="jackCardImg">
                                    </div> -->
                                </div>
                            </div>
                            <!-- Runes -->
                            <div class="col-xs-4 col-md-4 field row" id="runes">
                                <!-- Opponent Runes -->
                                <div id="oppRunes">
                                    <p class="areaLabel" ng-show="gc.opponent.runes.length < 2">Boons</p>
                                    <div ng-repeat="card in gc.opponent.runes" class="runeCard">
                                        <img ng-src="{{card.runeImg}}" class="runeCardImg" ts-droppable allow-drop="gc.dragoverOpRune" upon-drop="gc.dropOpRune" index="$index" draggable="false" ng-click="gc.clickCard(card, $event)" ng-class="{'legalMove': gc.legalMoves.indexOf(card.id) > -1 || gc.legalMoves.indexOf('allRunes') > -1 && gc.yourTurn}">
                                    </div>
                                </div>
                                <!-- Your Runes -->
                                <div id="yourRunes" ts-droppable allow-drop="gc.dragoverRunes" index="0" upon-drop="gc.dropRunes" ng-class="{'legalMove': gc.legalMoves.indexOf('runes') > -1 && gc.yourTurn}">
                                    <p class="areaLabel" ng-show="gc.player.runes.length < 2">Boons</p>
                                    <div ng-repeat="card in gc.player.runes" class="runeCard">
                                        <img ng-src="{{card.runeImg}}" ng-click="gc.clickCard(card, $event)" class="runeCardImg" draggable="false">
                                    </div>
                                </div>
                            </div> <!-- End of Runes -->

                            <!-- Game Log -->
                            <div id="logButtons">
                                <button ng-click="gc.toggleLog('gameLog')" class="btn btn-default" ng-class="{'activeTab': gc.logDisplay == 'gameLog'}">Game Log</button>
                                <button ng-click="gc.toggleLog('chat')" class="btn btn-default" ng-class="{'activeTab': gc.logDisplay == 'chat'}">Chat</button>
                            </div>
                            <div class="col-xs-2 col-md-2" id="gameLog">
                                <div id="logText">
                                    <div ng-repeat="text in gc.game.log track by $index" ng-hide="gc.resolvingThree || gc.resolvingSeven || gc.opResolvingSeven || gc.opResolvingThree || gc.logDisplay != 'gameLog'" class="logEntry">
                                        {{text}}
                                    </div>
                                    <div ng-repeat="text in gc.game.chat track by $index" ng-hide="gc.resolvingThree || gc.resolvingSeven || gc.opResolvingSeven || gc.opResolvingThree || gc.logDisplay != 'chat'" class="logEntry"> 
                                        {{text}}
                                    </div>
                                </div>
                                <div id="logNav">
                                    <form ng-submit="gc.chat()" id="chatForm" ng-hide="gc.resolvingThree || gc.resolvingSeven || gc.opResolvingSeven || gc.opResolvingThree || gc.logDisplay != 'chat'">
                                        <input type="text" ng-model="gc.chatEntry" id="chatBox">
                                        <input type="submit" class="btn btn-default">
                                    </form>
                                </div>
                                <!-- Top two cards in deck for resolving a seven -->
                                <div id="sevenCardWrapper">
                                    <img ng-if="gc.resolvingSeven && gc.game.topCard" ng-src="{{gc.game.topCard.img}}" ts-draggable class="sevenCard"  card-id="gc.game.topCard.id" index="0" type="'deck'" suit="gc.game.topCard.suit" rank="gc.game.topCard.rank" upon-drag="gc.findLegalMoves" drag-end="gc.clearLegalMoves">
                                    <img ng-if="gc.resolvingSeven && gc.game.secondCard" ng-src="{{gc.game.secondCard.img}}" ts-draggable upon-drag="gc.findLegalMoves" drag-end="gc.clearLegalMoves" class="sevenCard" card-id="gc.game.secondCard.id" index="1" type="'deck'" suit="gc.game.secondCard.suit" rank="gc.game.secondCard.rank">
                                    <img ng-if="gc.opResolvingSeven && gc.game.topCard" ng-src="{{gc.game.topCard.img}}" draggable="false" class="sevenCard">
                                    <img ng-if="gc.opResolvingSeven && gc.game.secondCard" ng-src="{{gc.game.secondCard.img}}" draggable="false" class="sevenCard">
                                </div>

                                <!-- Cards in scrap pile for resolving a three -->
                                <div id="threeCardWrapper">
                                    <div ng-repeat="card in gc.game.scrap track by $index" ng-if="gc.game.scrap.length > 30" ng-show="gc.resolvingThree" class="scrapCard">
                                        <img ng-src="{{card.img}}" ng-click="gc.chooseScrapCard($index)" class="scrapCardImg" draggable="false">
                                    </div>
                                    <!-- Cards in scrap pile (differently sized if > 30 cards in scrap) -->
                                    <div ng-repeat="card in gc.game.scrap track by $index" ng-if="gc.game.scrap.length < 30" ng-show="gc.resolvingThree" class="scrapCard">
                                        <img ng-src="{{card.img}}" ng-click="gc.chooseScrapCard($index)" class="scrapCardImg1" draggable="false">
                                    </div>
                                </div>
                            </div><!-- End of Gamee Log -->

                            <!-- Modal for alerts -->
                            <div class="modal-dialog" ng-show="gc.displayModal">
                            <div class="modal-content">
                                <h4 class="modal-header">
                                {{gc.modalHeader}}
                                </h4>
                                <div class="modal-body">
                                    <p>{{gc.modalBody}}</p>
                                </div>
                                <div class="modal-footer">
                                    <button class="btn btn-primary" ng-show="gc.modalButtons === 'Okay'" ng-click="gc.clearModal()">Okay</button>
                                    <button class="btn btn-primary" ng-show="gc.modalButtons === 'Resolve'" ng-click="gc.resolve()">Okay</button>
                                    <button class="btn btn-primary" ng-show="gc.modalButtons === 'Nine'" ng-click="gc.nineScuttle()">Scuttle</button>
                                    <button class="btn btn-primary" ng-show="gc.modalButtons === 'Nine'" ng-click="gc.nineTargetedOneOff()">One-Off</button>
                                </div> <!--    End Modal Footer       -->
                            </div><!--  End Modal Content   -->
                          </div> <!--   End Modal wrapper     -->

                            <!-- Modal for countering one-offs -->
                            <div class="modal-dialog" ng-show="gc.askCounter">
                            <div class="modal-content">
                                <h4 class="modal-header">
                                {{gc.game.oneOff.ruleText}}
                                </h4>
                                <div class="modal-body">
                                    <p>Drag a two onto the {{gc.game.twos.length > 0 && gc.game.twos[gc.game.twos.length - 1].name || gc.game.oneOff.name}} to counter it</p>
                                    <img ng-src="{{gc.game.twos.length > 0 && gc.game.twos[gc.game.twos.length - 1].img || gc.game.oneOff.img}}" id="counterOneOff" draggable="false" ts-droppable allow-drop="gc.dragoverOneOff" upon-drop="gc.counter">
                                </div>
                                <div class="modal-footer">
                                    <p>Click "Resolve" to allow the ONE-OFF to happen</p>
                                    <button class="btn btn-primary" ng-click="gc.resolve()">Resolve</button>
                                </div> <!--    End Modal Footer       -->
                            </div><!--  End Modal Content   -->
                          </div> <!--   End Modal wrapper     -->

                        <div ng-show="gc.viewCard != null" id="viewCard">
                            <img ng-src="{{gc.viewCard.img}}" id="viewCardImg">
                            <p id="viewCardText">{{gc.viewCard.ruleText}}</p>
                        </div>
                        </div> <!-- End of middle wrap -->
                        <!-- Bottom Wrap -->
                        <div id="bottomWrap" class="row">
                            <div id="yourHand">
                                <!-- Your Hand 
                                            NEED TO FIX THE IMAGE AND MAKE NEW IMAGES!!!!!!!!!!!!!!!!!!!!!
                                -->
                                <div ng-repeat="card in gc.player.hand" class="handCard">
                                    <img ng-src="{{card.img}}" ts-draggable index="$index" class="handCardImg" card-id="card.id" type="'hand'" suit="card.suit" rank="card.rank" ng-click="gc.clickCard(card, $event)" ng-class="{'discarding': gc.cardsToDiscard.indexOf(gc.player.hand[$index]) > -1}" upon-drag="gc.findLegalMoves" drag-end="gc.clearLegalMoves">
                                </div>
                            </div>
                            <div id="yourCounter">
                                <div id="oppName">{{gc.player.email}}</div>
                                <p id="yourPointTotal">Your Point Total: {{gc.yourPointCount}}</p>
                                <div id="yourKingSlot1" class="kingSlot" ng-class="{fullKing: gc.yourKingCount == 1}">
                                    <p class="cap1">14</p>
                                </div>
                                <div id="yourKingSlot2" class="kingSlot" ng-class="{fullKing: gc.yourKingCount == 2}">
                                    <p class="cap2">10</p>
                                </div>
                                <div>
                                    <div id="yourKingSlot0" class="kingSlot" ng-class="{fullKing: gc.yourKingCount == 0}">
                                        <div>
                                            <p>21</p>
                                        </div>
                                    </div>
                                </div>
                                <div>
                                    <div id="yourKingSlot3" class="kingSlot" ng-class="{fullKing: gc.yourKingCount == 3}">
                                        <p class="cap3">7</p>
                                    </div>
                                    <div id="yourKingSlot4" class="kingSlot" ng-class="{fullKing: gc.yourKingCount == 4}">
                                        <p class="cap4">5</p>
                                    </div>
                                </div>
                                <!-- Your king squares -->
                            </div>
                            <button type="button" class="btn btn-danger btn-lg btn-secondary" id="concedeButton" ng-click="gc.concede()">Concede</button>

                            <!-- DEVELOPMENT ONLY - REMOVE IN PRODUCTION -->
                            <button ng-click="gc.showDeck = !gc.showDeck" id="toggleDeck">Toggle Deck</button>
                            <button ng-click="gc.deleteDeck($event)" id="deleteDeck">Delete Deck</button>
                            <div ng-show="gc.showDeck" id="shownDeck">
                                <img ng-repeat="card in gc.game.deck" ng-src="{{card.img}}" class="shownDeckCard" ng-click="gc.stackDeck(gc.game.deck[$index].id, $event)">
                            </div>
                        </div> <!-- End of bottom wrap -->
                    </div>
                </div> <!-- End of ng-show for game -->
            </div> <!-- End of game controller -->

        </div> <!-- End of menuController -->
    </div><!-- End of app -->
</div><!-- End of body -->
</html>
